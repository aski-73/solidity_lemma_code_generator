{
    "type": "SourceUnit",
    "children": [
        {
            "type": "PragmaDirective",
            "name": "solidity",
            "value": ">=0.8.0 <0.9.0"
        },
        {
            "type": "ImportDirective",
            "path": "./Purchase.sol",
            "pathLiteral": {
                "type": "StringLiteral",
                "value": "./Purchase.sol",
                "parts": [
                    "./Purchase.sol"
                ],
                "isUnicode": [
                    false
                ]
            },
            "unitAlias": null,
            "unitAliasIdentifier": null,
            "symbolAliases": null,
            "symbolAliasesIdentifiers": null
        },
        {
            "type": "ContractDefinition",
            "name": "PurchaseBaseImpl",
            "baseContracts": [
                {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "Purchase"
                    },
                    "arguments": []
                }
            ],
            "subNodes": [
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint",
                                "stateMutability": null
                            },
                            "name": "value",
                            "identifier": {
                                "type": "Identifier",
                                "name": "value"
                            },
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false,
                            "isImmutable": false,
                            "override": null,
                            "storageLocation": null
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address",
                                "stateMutability": "payable"
                            },
                            "name": "seller",
                            "identifier": {
                                "type": "Identifier",
                                "name": "seller"
                            },
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false,
                            "isImmutable": false,
                            "override": null,
                            "storageLocation": null
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address",
                                "stateMutability": "payable"
                            },
                            "name": "buyer",
                            "identifier": {
                                "type": "Identifier",
                                "name": "buyer"
                            },
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false,
                            "isImmutable": false,
                            "override": null,
                            "storageLocation": null
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string",
                                "stateMutability": null
                            },
                            "name": "state",
                            "identifier": {
                                "type": "Identifier",
                                "name": "state"
                            },
                            "expression": {
                                "type": "StringLiteral",
                                "value": "START",
                                "parts": [
                                    "START"
                                ],
                                "isUnicode": [
                                    false
                                ]
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false,
                            "isImmutable": false,
                            "override": null,
                            "storageLocation": null
                        }
                    ],
                    "initialValue": {
                        "type": "StringLiteral",
                        "value": "START",
                        "parts": [
                            "START"
                        ],
                        "isUnicode": [
                            false
                        ]
                    }
                },
                {
                    "type": "FunctionDefinition",
                    "name": null,
                    "parameters": [],
                    "returnParameters": null,
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "init"
                                    },
                                    "arguments": [],
                                    "names": [],
                                    "identifiers": []
                                }
                            }
                        ]
                    },
                    "visibility": "default",
                    "modifiers": [],
                    "override": null,
                    "isConstructor": true,
                    "isReceiveEther": false,
                    "isFallback": false,
                    "isVirtual": false,
                    "stateMutability": null
                },
                {
                    "type": "CustomErrorDefinition",
                    "name": "OnlyBuyer",
                    "parameters": []
                },
                {
                    "type": "CustomErrorDefinition",
                    "name": "OnlySeller",
                    "parameters": []
                },
                {
                    "type": "CustomErrorDefinition",
                    "name": "InvalidState",
                    "parameters": []
                },
                {
                    "type": "CustomErrorDefinition",
                    "name": "ValueNotEven",
                    "parameters": []
                },
                {
                    "type": "EventDefinition",
                    "name": "Aborted",
                    "parameters": [],
                    "isAnonymous": false
                },
                {
                    "type": "EventDefinition",
                    "name": "PurchaseConfirmed",
                    "parameters": [],
                    "isAnonymous": false
                },
                {
                    "type": "EventDefinition",
                    "name": "ItemReceived",
                    "parameters": [],
                    "isAnonymous": false
                },
                {
                    "type": "EventDefinition",
                    "name": "SellerRefunded",
                    "parameters": [],
                    "isAnonymous": false
                },
                {
                    "type": "FunctionDefinition",
                    "name": "abort",
                    "parameters": [],
                    "returnParameters": null,
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "state"
                                    },
                                    "right": {
                                        "type": "StringLiteral",
                                        "value": "ABORTING",
                                        "parts": [
                                            "ABORTING"
                                        ],
                                        "isUnicode": [
                                            false
                                        ]
                                    }
                                }
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Aborted"
                                    },
                                    "arguments": [],
                                    "names": [],
                                    "identifiers": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "seller"
                                        },
                                        "memberName": "transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "address",
                                                    "stateMutability": null
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "this"
                                                    }
                                                ],
                                                "names": [],
                                                "identifiers": []
                                            },
                                            "memberName": "balance"
                                        }
                                    ],
                                    "names": [],
                                    "identifiers": []
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "override": null,
                    "isConstructor": false,
                    "isReceiveEther": false,
                    "isFallback": false,
                    "isVirtual": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "confirmPurchase",
                    "parameters": [],
                    "returnParameters": null,
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "state"
                                    },
                                    "right": {
                                        "type": "StringLiteral",
                                        "value": "LOCKED",
                                        "parts": [
                                            "LOCKED"
                                        ],
                                        "isUnicode": [
                                            false
                                        ]
                                    }
                                }
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "PurchaseConfirmed"
                                    },
                                    "arguments": [],
                                    "names": [],
                                    "identifiers": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "buyer"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "payable"
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        ],
                                        "names": [],
                                        "identifiers": []
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "override": null,
                    "isConstructor": false,
                    "isReceiveEther": false,
                    "isFallback": false,
                    "isVirtual": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "confirmReceived",
                    "parameters": [],
                    "returnParameters": null,
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "state"
                                    },
                                    "right": {
                                        "type": "StringLiteral",
                                        "value": "RELEASE",
                                        "parts": [
                                            "RELEASE"
                                        ],
                                        "isUnicode": [
                                            false
                                        ]
                                    }
                                }
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "ItemReceived"
                                    },
                                    "arguments": [],
                                    "names": [],
                                    "identifiers": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "buyer"
                                        },
                                        "memberName": "transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "value"
                                        }
                                    ],
                                    "names": [],
                                    "identifiers": []
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "override": null,
                    "isConstructor": false,
                    "isReceiveEther": false,
                    "isFallback": false,
                    "isVirtual": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "refundSeller",
                    "parameters": [],
                    "returnParameters": null,
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "state"
                                    },
                                    "right": {
                                        "type": "StringLiteral",
                                        "value": "REFUNDING",
                                        "parts": [
                                            "REFUNDING"
                                        ],
                                        "isUnicode": [
                                            false
                                        ]
                                    }
                                }
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "SellerRefunded"
                                    },
                                    "arguments": [],
                                    "names": [],
                                    "identifiers": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "seller"
                                        },
                                        "memberName": "transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "*",
                                            "left": {
                                                "type": "NumberLiteral",
                                                "number": "3",
                                                "subdenomination": null
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "value"
                                            }
                                        }
                                    ],
                                    "names": [],
                                    "identifiers": []
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "override": null,
                    "isConstructor": false,
                    "isReceiveEther": false,
                    "isFallback": false,
                    "isVirtual": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "init",
                    "parameters": [],
                    "returnParameters": null,
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "state"
                                    },
                                    "right": {
                                        "type": "StringLiteral",
                                        "value": "CREATED",
                                        "parts": [
                                            "CREATED"
                                        ],
                                        "isUnicode": [
                                            false
                                        ]
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "seller"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "payable"
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        ],
                                        "names": [],
                                        "identifiers": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "value"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "/",
                                        "left": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "value"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "2",
                                            "subdenomination": null
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "override": null,
                    "isConstructor": false,
                    "isReceiveEther": false,
                    "isFallback": false,
                    "isVirtual": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "handle",
                    "parameters": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string",
                                "stateMutability": null
                            },
                            "name": "input",
                            "identifier": {
                                "type": "Identifier",
                                "name": "input"
                            },
                            "storageLocation": "memory",
                            "isStateVar": false,
                            "isIndexed": false,
                            "expression": null
                        }
                    ],
                    "returnParameters": null,
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "&&",
                                    "left": {
                                        "type": "BinaryOperation",
                                        "operator": "&&",
                                        "left": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "isEqual"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "state"
                                                },
                                                {
                                                    "type": "StringLiteral",
                                                    "value": "CREATED",
                                                    "parts": [
                                                        "CREATED"
                                                    ],
                                                    "isUnicode": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "names": [],
                                            "identifiers": []
                                        },
                                        "right": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "isEqual"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "input"
                                                },
                                                {
                                                    "type": "StringLiteral",
                                                    "value": "abort()",
                                                    "parts": [
                                                        "abort()"
                                                    ],
                                                    "isUnicode": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "names": [],
                                            "identifiers": []
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "==",
                                        "left": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "seller"
                                        }
                                    }
                                },
                                "trueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "abort"
                                                },
                                                "arguments": [],
                                                "names": [],
                                                "identifiers": []
                                            }
                                        }
                                    ]
                                },
                                "falseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "isEqual"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "state"
                                            },
                                            {
                                                "type": "StringLiteral",
                                                "value": "ABORTING",
                                                "parts": [
                                                    "ABORTING"
                                                ],
                                                "isUnicode": [
                                                    false
                                                ]
                                            }
                                        ],
                                        "names": [],
                                        "identifiers": []
                                    },
                                    "trueBody": {
                                        "type": "Block",
                                        "statements": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "state"
                                                    },
                                                    "right": {
                                                        "type": "StringLiteral",
                                                        "value": "INACTIVE",
                                                        "parts": [
                                                            "INACTIVE"
                                                        ],
                                                        "isUnicode": [
                                                            false
                                                        ]
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "falseBody": {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "BinaryOperation",
                                            "operator": "&&",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "isEqual"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "state"
                                                        },
                                                        {
                                                            "type": "StringLiteral",
                                                            "value": "CREATED",
                                                            "parts": [
                                                                "CREATED"
                                                            ],
                                                            "isUnicode": [
                                                                false
                                                            ]
                                                        }
                                                    ],
                                                    "names": [],
                                                    "identifiers": []
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "isEqual"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "input"
                                                        },
                                                        {
                                                            "type": "StringLiteral",
                                                            "value": "confirmPurchase()",
                                                            "parts": [
                                                                "confirmPurchase()"
                                                            ],
                                                            "isUnicode": [
                                                                false
                                                            ]
                                                        }
                                                    ],
                                                    "names": [],
                                                    "identifiers": []
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "value"
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "NumberLiteral",
                                                        "number": "2",
                                                        "subdenomination": null
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "value"
                                                    }
                                                }
                                            }
                                        },
                                        "trueBody": {
                                            "type": "Block",
                                            "statements": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "confirmPurchase"
                                                        },
                                                        "arguments": [],
                                                        "names": [],
                                                        "identifiers": []
                                                    }
                                                }
                                            ]
                                        },
                                        "falseBody": {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "&&",
                                                    "left": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "isEqual"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "state"
                                                            },
                                                            {
                                                                "type": "StringLiteral",
                                                                "value": "LOCKED",
                                                                "parts": [
                                                                    "LOCKED"
                                                                ],
                                                                "isUnicode": [
                                                                    false
                                                                ]
                                                            }
                                                        ],
                                                        "names": [],
                                                        "identifiers": []
                                                    },
                                                    "right": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "isEqual"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "input"
                                                            },
                                                            {
                                                                "type": "StringLiteral",
                                                                "value": "confirmReceived()",
                                                                "parts": [
                                                                    "confirmReceived()"
                                                                ],
                                                                "isUnicode": [
                                                                    false
                                                                ]
                                                            }
                                                        ],
                                                        "names": [],
                                                        "identifiers": []
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "buyer"
                                                    }
                                                }
                                            },
                                            "trueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "confirmReceived"
                                                            },
                                                            "arguments": [],
                                                            "names": [],
                                                            "identifiers": []
                                                        }
                                                    }
                                                ]
                                            },
                                            "falseBody": {
                                                "type": "IfStatement",
                                                "condition": {
                                                    "type": "BinaryOperation",
                                                    "operator": "&&",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": "&&",
                                                        "left": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "isEqual"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "state"
                                                                },
                                                                {
                                                                    "type": "StringLiteral",
                                                                    "value": "RELEASE",
                                                                    "parts": [
                                                                        "RELEASE"
                                                                    ],
                                                                    "isUnicode": [
                                                                        false
                                                                    ]
                                                                }
                                                            ],
                                                            "names": [],
                                                            "identifiers": []
                                                        },
                                                        "right": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "isEqual"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "input"
                                                                },
                                                                {
                                                                    "type": "StringLiteral",
                                                                    "value": "refundSeller()",
                                                                    "parts": [
                                                                        "refundSeller()"
                                                                    ],
                                                                    "isUnicode": [
                                                                        false
                                                                    ]
                                                                }
                                                            ],
                                                            "names": [],
                                                            "identifiers": []
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "memberName": "sender"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "seller"
                                                        }
                                                    }
                                                },
                                                "trueBody": {
                                                    "type": "Block",
                                                    "statements": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "refundSeller"
                                                                },
                                                                "arguments": [],
                                                                "names": [],
                                                                "identifiers": []
                                                            }
                                                        }
                                                    ]
                                                },
                                                "falseBody": {
                                                    "type": "IfStatement",
                                                    "condition": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "isEqual"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "state"
                                                            },
                                                            {
                                                                "type": "StringLiteral",
                                                                "value": "REFUNDING",
                                                                "parts": [
                                                                    "REFUNDING"
                                                                ],
                                                                "isUnicode": [
                                                                    false
                                                                ]
                                                            }
                                                        ],
                                                        "names": [],
                                                        "identifiers": []
                                                    },
                                                    "trueBody": {
                                                        "type": "Block",
                                                        "statements": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "state"
                                                                    },
                                                                    "right": {
                                                                        "type": "StringLiteral",
                                                                        "value": "INACTIVE",
                                                                        "parts": [
                                                                            "INACTIVE"
                                                                        ],
                                                                        "isUnicode": [
                                                                            false
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "falseBody": {
                                                        "type": "IfStatement",
                                                        "condition": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "isEqual"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "state"
                                                                },
                                                                {
                                                                    "type": "StringLiteral",
                                                                    "value": "INACTIVE",
                                                                    "parts": [
                                                                        "INACTIVE"
                                                                    ],
                                                                    "isUnicode": [
                                                                        false
                                                                    ]
                                                                }
                                                            ],
                                                            "names": [],
                                                            "identifiers": []
                                                        },
                                                        "trueBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "state"
                                                                        },
                                                                        "right": {
                                                                            "type": "StringLiteral",
                                                                            "value": "END",
                                                                            "parts": [
                                                                                "END"
                                                                            ],
                                                                            "isUnicode": [
                                                                                false
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "falseBody": null
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "override": [],
                    "isConstructor": false,
                    "isReceiveEther": false,
                    "isFallback": false,
                    "isVirtual": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "isEqual",
                    "parameters": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string",
                                "stateMutability": null
                            },
                            "name": "a",
                            "identifier": {
                                "type": "Identifier",
                                "name": "a"
                            },
                            "storageLocation": "memory",
                            "isStateVar": false,
                            "isIndexed": false,
                            "expression": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string",
                                "stateMutability": null
                            },
                            "name": "b",
                            "identifier": {
                                "type": "Identifier",
                                "name": "b"
                            },
                            "storageLocation": "memory",
                            "isStateVar": false,
                            "isIndexed": false,
                            "expression": null
                        }
                    ],
                    "returnParameters": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bool",
                                "stateMutability": null
                            },
                            "name": "name",
                            "identifier": {
                                "type": "Identifier",
                                "name": "name"
                            },
                            "storageLocation": null,
                            "isStateVar": false,
                            "isIndexed": false,
                            "expression": null
                        }
                    ],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ReturnStatement",
                                "expression": {
                                    "type": "TupleExpression",
                                    "components": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "keccak256"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "abi"
                                                            },
                                                            "memberName": "encodePacked"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "TupleExpression",
                                                                "components": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "a"
                                                                    }
                                                                ],
                                                                "isArray": false
                                                            }
                                                        ],
                                                        "names": [],
                                                        "identifiers": []
                                                    }
                                                ],
                                                "names": [],
                                                "identifiers": []
                                            },
                                            "right": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "keccak256"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "abi"
                                                            },
                                                            "memberName": "encodePacked"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "TupleExpression",
                                                                "components": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "b"
                                                                    }
                                                                ],
                                                                "isArray": false
                                                            }
                                                        ],
                                                        "names": [],
                                                        "identifiers": []
                                                    }
                                                ],
                                                "names": [],
                                                "identifiers": []
                                            }
                                        }
                                    ],
                                    "isArray": false
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "override": null,
                    "isConstructor": false,
                    "isReceiveEther": false,
                    "isFallback": false,
                    "isVirtual": false,
                    "stateMutability": "pure"
                }
            ],
            "kind": "contract"
        }
    ]
}